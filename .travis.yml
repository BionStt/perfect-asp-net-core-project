language: csharp  
sudo: required  
dist: trusty  
mono: none
dotnet: 2.0.0
# whitelist
branches:
  only:
    - master
    - staging
    - production
install:
  - dotnet restore
script:  
  - dotnet test ./UnitTests
before_deploy: 
  - if [[ $TRAVIS_BRANCH == 'staging' ]]; then
    echo "Building for Staging...";
    export ASPNETCORE_ENVIRONMENT="Staging"; 
    fi
  - if [[ $TRAVIS_BRANCH == 'production' ]]; then
    echo "Building for Production...";
    export ASPNETCORE_ENVIRONMENT="Production";
    fi
    dotnet publish -c Release -o ../release;
    cd release;
    zip -r ../app.zip *;
    cd ../;
    zip -r bundle.zip app.zip aws-windows-deployment-manifest.json;
deploy:
  # deploy to staging
  - provider: elasticbeanstalk
    access_key_id: "AKIAIB66OF6PQNIUIPWQ"
    secret_access_key:
     secure: "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"
    region: "us-east-2"  
    app: "perfect-asp-net-core-project"
    env: "PerfectAspNetCoreProjectStaging"
    bucket_name: "elasticbeanstalk-us-east-2-337708005292"
    zip_file: ./bundle.zip
    skip_cleanup: true
    on:
      branch: staging
  # deploy to production
  - provider: elasticbeanstalk
    access_key_id: "AKIAIB66OF6PQNIUIPWQ"
    secret_access_key:
     secure: "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"
    region: "us-east-2"  
    app: "perfect-asp-net-core-project"
    env: "PerfectAspNetCoreProjectProduction"
    bucket_name: "elasticbeanstalk-us-east-2-337708005292"
    zip_file: ./bundle.zip
    skip_cleanup: true
    on:
      branch: production